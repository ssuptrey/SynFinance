[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "synfinance"
version = "0.5.0"
description = "Synthetic financial transaction data generator for Indian market"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "SynFinance Development Team", email = "dev@synfinance.example.com"}
]
maintainers = [
    {name = "SynFinance Development Team", email = "dev@synfinance.example.com"}
]
keywords = [
    "synthetic-data",
    "financial-transactions", 
    "fraud-detection",
    "machine-learning",
    "indian-market"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Software Development :: Testing",
    "Topic :: Office/Business :: Financial",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "streamlit>=1.28.0",
    "pandas>=2.1.1",
    "faker>=19.12.0",
    "numpy>=1.26.0",
    "xlsxwriter>=3.1.9",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
]
ml = [
    "scikit-learn>=1.3.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]
api = [
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "pydantic>=2.4.0",
]
all = [
    "synfinance[dev,ml,api]",
]

[project.urls]
Homepage = "https://github.com/yourusername/synfinance"
Documentation = "https://github.com/yourusername/synfinance/blob/main/docs/INDEX.md"
Repository = "https://github.com/yourusername/synfinance"
"Bug Tracker" = "https://github.com/yourusername/synfinance/issues"

[project.scripts]
synfinance = "src.app:main"

[tool.setuptools]
packages = ["src", "src.generators", "src.models", "src.utils"]

[tool.setuptools.package-data]
src = ["**/*.py"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.venv
  | venv
  | build
  | dist
  | __pycache__
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true
skip = [".venv", "venv", "build", "dist"]

# mypy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "faker.*",
    "streamlit.*",
    "xlsxwriter.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-v --tb=short --strict-markers -ra"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "customer: Customer generation tests",
    "temporal: Temporal pattern tests",
    "geographic: Geographic pattern tests",
    "merchant: Merchant ecosystem tests",
    "schema: Advanced schema tests",
    "correlation: Correlation analysis tests",
    "variance: Data variance tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
    ".venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
precision = 2
show_missing = true

[tool.coverage.html]
directory = "htmlcov"
